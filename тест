1.Класс является структурным типом данных. Класс включает описание полей данных, а также процедур и функций, которые работают с этими полями данных. Метод ООП – это и есть такие процедуры и функции применительно к классам.
2.Инкапсуляция (англ. encapsulation, от лат. in capsula) — в информатике размещение в одном компоненте данных и методов, которые с ними работают. Также может означать скрытие внутренней реализации от других компонентов. Например, доступ к скрытой переменной может предоставляться не напрямую, а с помощью методов для чтения (геттер) и изменения (сеттер) её значения.
3.Модификаторы доступа существуют для того, чтобы сделать код надежнее и защищеннее.Модификаторы доступа private, protected, public 
4.рефлексия позволяет получить доступ к любому методу и полю, независимо от уровня доступа, следовательно нужно по возможности помечать поля и параметры методов как final, что бы сделать их immutable
5.Наследование — создание нового класса на базе уже имеющегося, или базового класса. Принцип наследования состоит в том, что элементы данных и методы базового класса автоматически становятся элементами данных нового класса.
6.полиморфизм в языках программирования и теории типов — способность функции обрабатывать данные разных типов
7.конструктор-специальный блок инструкций, вызываемый при создании объекта.
8.Абстрактный класс похож на обычный класс. В абстрактном классе также можно определить поля и методы, но в то же время нельзя создать объект или экземпляр абстрактного класса. Абстрактные классы призваны предоставлять базовый функционал для классов-наследников. А производные классы уже реализуют этот функционал.
9.Статические поля описывают общие данные всех объектов классов. Например, у класса Person может быть статическое поле message, в котором каждый объект может оставить сообщение для других объектов класса. У класса могут также быть и статические методы, объявленные с модификатором static.
10.По умолчанию все классы наследуются от базового класса Object, даже если мы явным образом не устанавливаем наследование. Поэтому выше определенные классы Person и Employee кроме своих собственных методов, также будут иметь и методы класса Object: ToString(), Equals(), GetHashCode() и GetType().
11.Функция CAST() может быть использована в условиях поиска, чтобы транслировать один тип данных в другой, для целей сравнения. instanceof - это ключевое слово. Это двоичный оператор, используемый для проверки, является ли объект (экземпляр) подтипом данного типа. Он возвращает либо true, либо false. Он возвращает true, если левая часть выражения является экземпляром имени класса с правой стороны.
12.стек и куча
13.Множественное наследование дает возможность создать класс, наследованный от нескольких суперклассов. В отличии от некоторых других популярных объектно-ориентированных языков программирования, таких как С++ в Java запрещено множественное наследование от классов.
14.Интерфейс определяет границу взаимодействия между классами или компонентами, специфицируя определённую абстракцию, которую осуществляет реализующая сторона. Интерфейс в ООП является строго формализованным элементом объектно-ориентированного языка и широко используется в исходном коде программ.
